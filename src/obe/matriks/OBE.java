/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package obe.matriks;

import java.awt.Color;
import java.util.Arrays;
import javax.swing.JOptionPane;
import org.apache.commons.math3.fraction.Fraction;

/**
 *
 * @author adam
 */
public class OBE extends javax.swing.JFrame {

    /**
     * Creates new form OBE
     */
    // instance
    double[][] matrixA = new double[3][3];
    double[][] minor = new double[3][3];
    double[][] kofaktor = new double[3][3];
    double[][] adjoin = new double[3][3];
    Fraction[][] pecahan = new Fraction[3][3];
    Fraction[][] pecahanobe = new Fraction[3][6];
    
    public OBE() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField4 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        b1k1a = new javax.swing.JTextField();
        b2k1a = new javax.swing.JTextField();
        b1k2a = new javax.swing.JTextField();
        b1k3a = new javax.swing.JTextField();
        b2k3a = new javax.swing.JTextField();
        b2k2a = new javax.swing.JTextField();
        b3k1a = new javax.swing.JTextField();
        b3k2a = new javax.swing.JTextField();
        b3k3a = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        hasil = new javax.swing.JButton();
        HapusSemua = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        HasilOBE = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        OBE = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jTextField8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField8ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Invers");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        b1k1a.setForeground(new java.awt.Color(150, 150, 150));
        b1k1a.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        b1k1a.setText("0");
        b1k1a.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                b1k1aFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                b1k1aFocusLost(evt);
            }
        });
        b1k1a.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b1k1aActionPerformed(evt);
            }
        });

        b2k1a.setForeground(new java.awt.Color(150, 150, 150));
        b2k1a.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        b2k1a.setText("0");
        b2k1a.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                b2k1aFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                b2k1aFocusLost(evt);
            }
        });
        b2k1a.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b2k1aActionPerformed(evt);
            }
        });

        b1k2a.setForeground(new java.awt.Color(150, 150, 150));
        b1k2a.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        b1k2a.setText("0");
        b1k2a.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                b1k2aFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                b1k2aFocusLost(evt);
            }
        });
        b1k2a.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b1k2aActionPerformed(evt);
            }
        });

        b1k3a.setForeground(new java.awt.Color(150, 150, 150));
        b1k3a.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        b1k3a.setText("0");
        b1k3a.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                b1k3aFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                b1k3aFocusLost(evt);
            }
        });
        b1k3a.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b1k3aActionPerformed(evt);
            }
        });

        b2k3a.setForeground(new java.awt.Color(150, 150, 150));
        b2k3a.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        b2k3a.setText("0");
        b2k3a.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                b2k3aFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                b2k3aFocusLost(evt);
            }
        });
        b2k3a.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b2k3aActionPerformed(evt);
            }
        });

        b2k2a.setForeground(new java.awt.Color(150, 150, 150));
        b2k2a.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        b2k2a.setText("0");
        b2k2a.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                b2k2aFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                b2k2aFocusLost(evt);
            }
        });
        b2k2a.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b2k2aActionPerformed(evt);
            }
        });

        b3k1a.setForeground(new java.awt.Color(150, 150, 150));
        b3k1a.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        b3k1a.setText("0");
        b3k1a.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                b3k1aFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                b3k1aFocusLost(evt);
            }
        });
        b3k1a.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b3k1aActionPerformed(evt);
            }
        });

        b3k2a.setForeground(new java.awt.Color(150, 150, 150));
        b3k2a.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        b3k2a.setText("0");
        b3k2a.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                b3k2aFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                b3k2aFocusLost(evt);
            }
        });
        b3k2a.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b3k2aActionPerformed(evt);
            }
        });

        b3k3a.setForeground(new java.awt.Color(150, 150, 150));
        b3k3a.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        b3k3a.setText("0");
        b3k3a.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                b3k3aFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                b3k3aFocusLost(evt);
            }
        });
        b3k3a.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b3k3aActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(b3k1a, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b2k1a, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b1k1a, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(b1k2a, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(b1k3a, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(b2k2a, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(b2k3a, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(b3k2a, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(b3k3a, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b1k1a, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b1k2a, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b1k3a, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b2k1a, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b2k2a, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b2k3a, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b3k1a, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b3k2a, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b3k3a, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        jLabel3.setText("Inputan");

        jLabel4.setText("Hasil");

        hasil.setBackground(new java.awt.Color(153, 153, 255));
        hasil.setFont(new java.awt.Font("Lucida Sans", 0, 24)); // NOI18N
        hasil.setText("=");
        hasil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hasilActionPerformed(evt);
            }
        });

        HapusSemua.setText("Hapus Semua");
        HapusSemua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HapusSemuaActionPerformed(evt);
            }
        });

        HasilOBE.setColumns(20);
        HasilOBE.setRows(5);
        jScrollPane1.setViewportView(HasilOBE);

        jLabel1.setText("Adjoin");

        OBE.setBackground(new java.awt.Color(255, 153, 153));
        OBE.setFont(new java.awt.Font("Lucida Sans", 0, 24)); // NOI18N
        OBE.setText("=");
        OBE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OBEActionPerformed(evt);
            }
        });

        jLabel5.setText("OBE");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(165, 165, 165)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(180, 180, 180))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(371, 371, 371)
                .addComponent(HapusSemua)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(86, 86, 86)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hasil)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5)
                    .addComponent(OBE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(hasil)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(OBE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(HapusSemua)
                        .addGap(32, 32, 32))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(63, Short.MAX_VALUE))))
        );

        jLabel2.setFont(new java.awt.Font("Norasi", 0, 24)); // NOI18N
        jLabel2.setText("Invers Matrix");

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/obe/matriks/Gambar/panah.jpg"))); // NOI18N
        jButton2.setText("Kembali");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jButton2)
                        .addGap(335, 335, 335)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(176, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jButton2))
                .addGap(36, 36, 36)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jTextField8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField8ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Menu menu = new Menu();
        menu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void HapusSemuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HapusSemuaActionPerformed
        // TODO add your handling code here:
        clearmatrix();
        clearhasil();

    }//GEN-LAST:event_HapusSemuaActionPerformed

    private void hasilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hasilActionPerformed
        // TODO add your handling code here:
        adjoin();
    }//GEN-LAST:event_hasilActionPerformed

    private void b3k3aActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b3k3aActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_b3k3aActionPerformed

    private void b3k3aFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_b3k3aFocusLost
        // TODO add your handling code here:
        if (b3k3a.getText().equals("")) {
            b3k3a.setText("0");
            b3k3a.setForeground(new Color(150, 150, 150));
        }
    }//GEN-LAST:event_b3k3aFocusLost

    private void b3k3aFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_b3k3aFocusGained
        // TODO add your handling code here:
        if (b3k3a.getText().equals("0")) {
            b3k3a.setText("");
            b3k3a.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_b3k3aFocusGained

    private void b3k2aActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b3k2aActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_b3k2aActionPerformed

    private void b3k2aFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_b3k2aFocusGained
        // TODO add your handling code here:
        if (b3k2a.getText().equals("0")) {
            b3k2a.setText("");
            b3k2a.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_b3k2aFocusGained

    private void b3k1aActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b3k1aActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_b3k1aActionPerformed

    private void b3k1aFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_b3k1aFocusLost
        // TODO add your handling code here:
        if (b3k1a.getText().equals("")) {
            b3k1a.setText("0");
            b3k1a.setForeground(new Color(150, 150, 150));
        }
    }//GEN-LAST:event_b3k1aFocusLost

    private void b3k1aFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_b3k1aFocusGained
        // TODO add your handling code here:
        if (b3k1a.getText().equals("0")) {
            b3k1a.setText("");
            b3k1a.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_b3k1aFocusGained

    private void b2k2aActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b2k2aActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_b2k2aActionPerformed

    private void b2k2aFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_b2k2aFocusLost
        // TODO add your handling code here:
        if (b2k2a.getText().equals("")) {
            b2k2a.setText("0");
            b2k2a.setForeground(new Color(150, 150, 150));
        }
    }//GEN-LAST:event_b2k2aFocusLost

    private void b2k2aFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_b2k2aFocusGained
        // TODO add your handling code here:
        if (b2k2a.getText().equals("0")) {
            b2k2a.setText("");
            b2k2a.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_b2k2aFocusGained

    private void b2k3aActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b2k3aActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_b2k3aActionPerformed

    private void b2k3aFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_b2k3aFocusLost
        // TODO add your handling code here:
        if (b2k3a.getText().equals("")) {
            b2k3a.setText("0");
            b2k3a.setForeground(new Color(150, 150, 150));
        }
    }//GEN-LAST:event_b2k3aFocusLost

    private void b2k3aFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_b2k3aFocusGained
        // TODO add your handling code here:
        if (b2k3a.getText().equals("0")) {
            b2k3a.setText("");
            b2k3a.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_b2k3aFocusGained

    private void b1k3aActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b1k3aActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_b1k3aActionPerformed

    private void b1k3aFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_b1k3aFocusLost
        // TODO add your handling code here:
        if (b1k3a.getText().equals("")) {
            b1k3a.setText("0");
            b1k3a.setForeground(new Color(150, 150, 150));
        }
    }//GEN-LAST:event_b1k3aFocusLost

    private void b1k3aFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_b1k3aFocusGained
        // TODO add your handling code here:
        if (b1k3a.getText().equals("0")) {
            b1k3a.setText("");
            b1k3a.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_b1k3aFocusGained

    private void b1k2aActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b1k2aActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_b1k2aActionPerformed

    private void b1k2aFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_b1k2aFocusLost
        // TODO add your handling code here:
        if (b1k2a.getText().equals("")) {
            b1k2a.setText("0");
            b1k2a.setForeground(new Color(150, 150, 150));
        }
    }//GEN-LAST:event_b1k2aFocusLost

    private void b1k2aFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_b1k2aFocusGained
        // TODO add your handling code here:
        if (b1k2a.getText().equals("0")) {
            b1k2a.setText("");
            b1k2a.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_b1k2aFocusGained

    private void b2k1aActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b2k1aActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_b2k1aActionPerformed

    private void b2k1aFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_b2k1aFocusLost
        // TODO add your handling code here:
        if (b2k1a.getText().equals("")) {
            b2k1a.setText("0");
            b2k1a.setForeground(new Color(150, 150, 150));
        }
    }//GEN-LAST:event_b2k1aFocusLost

    private void b2k1aFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_b2k1aFocusGained
        // TODO add your handling code here:
        if (b2k1a.getText().equals("0")) {
            b2k1a.setText("");
            b2k1a.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_b2k1aFocusGained

    private void b1k1aActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b1k1aActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_b1k1aActionPerformed

    private void b1k1aFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_b1k1aFocusLost
        // TODO add your handling code here:
        if (b1k1a.getText().equals("")) {
            b1k1a.setText("0");
            b1k1a.setForeground(new Color(150, 150, 150));
        }
    }//GEN-LAST:event_b1k1aFocusLost

    private void b1k1aFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_b1k1aFocusGained
        // TODO add your handling code here:
        if (b1k1a.getText().equals("0")) {
            b1k1a.setText("");
            b1k1a.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_b1k1aFocusGained

    private void OBEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OBEActionPerformed
        // TODO add your handling code here:
        OperasiBarisElementer();
        //inverseMatrix(matrixA);
    }//GEN-LAST:event_OBEActionPerformed

    private void b3k2aFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_b3k2aFocusLost
        // TODO add your handling code here:
        if (b3k2a.getText().equals("")) {
            b3k2a.setText("0");
            b3k2a.setForeground(new Color(150, 150, 150));
        }
    }//GEN-LAST:event_b3k2aFocusLost
    
    private void Invers() {
        try {
            matrixA[0][0] = Double.parseDouble(b1k1a.getText());
            matrixA[0][1] = Double.parseDouble(b1k2a.getText());
            matrixA[0][2] = Double.parseDouble(b1k3a.getText());
            matrixA[1][0] = Double.parseDouble(b2k1a.getText());
            matrixA[1][1] = Double.parseDouble(b2k2a.getText());
            matrixA[1][2] = Double.parseDouble(b2k3a.getText());
            matrixA[2][0] = Double.parseDouble(b3k1a.getText());
            matrixA[2][1] = Double.parseDouble(b3k2a.getText());
            matrixA[2][2] = Double.parseDouble(b3k3a.getText());
        } catch (Exception e) {
            JOptionPane.showConfirmDialog(null, "Yang anda inputkan kosong atau bukan angka", "Konfirmasi", JOptionPane.OK_OPTION);
        }
    }
    
    private double determinan() {
        Invers();
        double detp = ((matrixA[0][0] * matrixA[1][1] * matrixA[2][2]) + (matrixA[0][1] * matrixA[1][2] * matrixA[2][0]) + (matrixA[0][2] * matrixA[1][0] * matrixA[2][1])) - ((matrixA[2][0] * matrixA[1][1] * matrixA[0][2]) + (matrixA[2][1] * matrixA[1][2] * matrixA[0][0]) + (matrixA[2][2] * matrixA[1][0] * matrixA[0][1]));
        return detp;
    }
    
    private void Minor() {
        Invers();
        // Mb1k1
        minor[0][0] = (matrixA[1][1] * matrixA[2][2]) - (matrixA[1][2] * matrixA[2][1]);
        // mb1k2
        minor[0][1] = (matrixA[1][0] * matrixA[2][2]) - (matrixA[1][2] * matrixA[2][0]);
        // mb1k3
        minor[0][2] = (matrixA[1][0] * matrixA[2][1]) - (matrixA[1][1] * matrixA[2][0]);

        //mb2k1
        minor[1][0] = (matrixA[0][1] * matrixA[2][2]) - (matrixA[0][2] * matrixA[2][1]);
        //mb2k2
        minor[1][1] = (matrixA[0][0] * matrixA[2][2]) - (matrixA[0][2] * matrixA[2][0]);
        //mb2k3
        minor[1][2] = (matrixA[0][0] * matrixA[2][1]) - (matrixA[0][1] * matrixA[2][0]);

        //mb3k1
        minor[2][0] = (matrixA[0][1] * matrixA[1][2]) - (matrixA[0][2] * matrixA[1][1]);
        //mb3k2
        minor[2][1] = (matrixA[0][0] * matrixA[1][2]) - (matrixA[0][2] * matrixA[1][0]);
        //mb2k3
        minor[2][2] = (matrixA[0][0] * matrixA[1][1]) - (matrixA[0][1] * matrixA[1][0]);

        //output
        HasilOBE.append("Hasil Matrix determinan\n");
        HasilOBE.append(String.valueOf(determinan() + "\t\n\n"));
        HasilOBE.append("Hasil Matrix Minor\n");
        HasilOBE.append(String.valueOf(minor[0][0] + "\t" + minor[1][0] + "\t" + minor[2][0] + "\t\n"));
        HasilOBE.append(String.valueOf(minor[0][1] + "\t" + minor[1][1] + "\t" + minor[2][1] + "\t\n"));
        HasilOBE.append(String.valueOf(minor[0][2] + "\t" + minor[1][2] + "\t" + minor[2][2] + "\t"));
    }
    
    public void kofaktor() {
        Minor();
        kofaktor[0][0] = 1 * minor[0][0];
        kofaktor[0][1] = -1 * minor[0][1];
        kofaktor[0][2] = 1 * minor[0][2];
        kofaktor[1][0] = -1 * minor[1][0];
        kofaktor[1][1] = 1 * minor[1][1];
        kofaktor[1][2] = -1 * minor[1][2];
        kofaktor[2][0] = 1 * minor[2][0];
        kofaktor[2][1] = -1 * minor[2][1];
        kofaktor[2][2] = 1 * minor[2][2];
        
        HasilOBE.append("\n\nHasil Matrix Kofaktor\n");
        HasilOBE.append(String.valueOf(kofaktor[0][0] + "\t" + kofaktor[1][0] + "\t" + kofaktor[2][0] + "\t\n"));
        HasilOBE.append(String.valueOf(kofaktor[0][1] + "\t" + kofaktor[1][1] + "\t" + kofaktor[2][1] + "\t\n"));
        HasilOBE.append(String.valueOf(kofaktor[0][2] + "\t" + kofaktor[1][2] + "\t" + kofaktor[2][2] + "\t"));
        
    }
    
    public void adjoin() {
        kofaktor();
        double determinan = 1 / determinan();
        adjoin[0][0] = determinan * kofaktor[0][0];
        adjoin[0][1] = determinan * kofaktor[0][1];
        adjoin[0][2] = determinan * kofaktor[0][2];
        adjoin[1][0] = determinan * kofaktor[1][0];
        adjoin[1][1] = determinan * kofaktor[1][1];
        adjoin[1][2] = determinan * kofaktor[1][2];
        adjoin[2][0] = determinan * kofaktor[2][0];
        adjoin[2][1] = determinan * kofaktor[2][1];
        adjoin[2][2] = determinan * kofaktor[2][2];

        // render menjadi pecahan/fraction
        pecahan[0][0] = new Fraction(adjoin[0][0]);
        pecahan[0][1] = new Fraction(adjoin[0][1]);
        pecahan[0][2] = new Fraction(adjoin[0][2]);
        pecahan[1][0] = new Fraction(adjoin[1][0]);
        pecahan[1][1] = new Fraction(adjoin[1][1]);
        pecahan[1][2] = new Fraction(adjoin[1][2]);
        pecahan[2][0] = new Fraction(adjoin[2][0]);
        pecahan[2][1] = new Fraction(adjoin[2][1]);
        pecahan[2][2] = new Fraction(adjoin[2][2]);
        
        HasilOBE.append("\n\nHasil Matrix addjoin\n");
        HasilOBE.append(String.valueOf(pecahan[0][0] + "\t" + pecahan[1][0] + "\t" + pecahan[2][0] + "\t\n"));
        HasilOBE.append(String.valueOf(pecahan[0][1] + "\t" + pecahan[1][1] + "\t" + pecahan[2][1] + "\t\n"));
        HasilOBE.append(String.valueOf(pecahan[0][2] + "\t" + pecahan[1][2] + "\t" + pecahan[2][2] + "\t"));
        
    }
    
    public void clearmatrix() {
        //Matriks 1
        b1k1a.setForeground(new Color(150, 150, 150));
        b1k1a.setText("0");
        b1k2a.setForeground(new Color(150, 150, 150));
        b1k2a.setText("0");
        b1k3a.setForeground(new Color(150, 150, 150));
        b1k3a.setText("0");
        b2k1a.setForeground(new Color(150, 150, 150));
        b2k1a.setText("0");
        b2k2a.setForeground(new Color(150, 150, 150));
        b2k2a.setText("0");
        b2k3a.setForeground(new Color(150, 150, 150));
        b2k3a.setText("0");
        b3k1a.setForeground(new Color(150, 150, 150));
        b3k1a.setText("0");
        b3k2a.setForeground(new Color(150, 150, 150));
        b3k2a.setText("0");
        b3k3a.setForeground(new Color(150, 150, 150));
        b3k3a.setText("0");
    }
    
    public void clearhasil() {
        //Matriks 1
        HasilOBE.setText(" ");
    }
    

    public void OperasiBarisElementer() {
        // Matriks yang akan diinvers
        Invers();
        double[][] A = {{matrixA[0][0], matrixA[0][1], matrixA[0][2]}, {matrixA[1][0], matrixA[1][1], matrixA[1][2]}, {matrixA[2][0], matrixA[2][1], matrixA[2][2]}};

        // Buat matriks identitas dengan jumlah baris dan kolom sama dengan matriks A
        int n = A.length;
        double[][] I = new double[n][n];
        for (int i = 0; i < n; i++) {
            I[i][i] = 1;
        }

        // Buat matriks gabungan dari matriks A dan matriks identitas
        double[][] combined = new double[n][2 * n];
        for (int i = 0; i < n; i++) {
            combined[i] = Arrays.copyOf(A[i], 2 * n);
            System.arraycopy(I[i], 0, combined[i], n, n);
            
        }

        // Tampilkan matriks gabungan awal
        HasilOBE.append("\n\nMatriks gabungan awal:\n ");
        printMatrix(combined);

        // Lakukan operasi baris elementer untuk mengubah matriks A menjadi matriks identitas
        for (int i = 0; i < n; i++) {
            // Pilih elemen pivot di kolom i, baris ke-i
            double pivot = combined[i][i];

            // Jika elemen pivot adalah 0, cari baris lain yang elemennya tidak 0 dan tukar dengan baris ke-i
            if (pivot == 0) {
                for (int j = i + 1; j < n; j++) {
                    if (combined[j][i] != 0) {
                        swapRows(combined, i, j);
                        break;
                    }
                }
                pivot = combined[i][i];
            }

            // Jika setelah dicari baris lain yang elemennya tidak 0 masih tidak ditemukan, skip baris ke-i
            if (pivot == 0) {
                continue;
            }

            // Jalankan operasi baris elementer pada baris ke-i
            for (int j = 0; j < 2 * n; j++) {
                combined[i][j] /= pivot;
            }
            for (int j = 0; j < n; j++) {
                if (i == j) {
                    continue;
                }
                double factor = combined[j][i];
                for (int k = 0; k < 2 * n; k++) {
                    combined[j][k] -= combined[i][k] * factor;
                }
            }
        }
      
       
       
       pecahanobe[0][0] = new Fraction(combined[0][0]);
       pecahanobe[0][1] = new Fraction(combined[0][1]);
       pecahanobe[0][2] = new Fraction(combined[0][2]);
       pecahanobe[0][3] = new Fraction(combined[0][3]);
       pecahanobe[0][4] = new Fraction(combined[0][4]);
       pecahanobe[0][5] = new Fraction(combined[0][5]);              
       pecahanobe[1][0] = new Fraction(combined[1][0]);
       pecahanobe[1][1] = new Fraction(combined[1][1]);
       pecahanobe[1][2] = new Fraction(combined[1][2]);
       pecahanobe[1][3] = new Fraction(combined[1][3]);
       pecahanobe[1][4] = new Fraction(combined[1][4]);
       pecahanobe[1][5] = new Fraction(combined[1][5]);              
       pecahanobe[2][0] = new Fraction(combined[2][0]);
       pecahanobe[2][1] = new Fraction(combined[2][1]);
       pecahanobe[2][2] = new Fraction(combined[2][2]);
       pecahanobe[2][3] = new Fraction(combined[2][3]);
       pecahanobe[2][4] = new Fraction(combined[2][4]);
       pecahanobe[2][5] = new Fraction(combined[2][5]);
       
       
        // Tampilkan matriks gabungan setelah operasi baris elementer selesai
        HasilOBE.append("\nMatriks gabungan setelah operasi baris elementer: \n");
        HasilOBE.append(String.valueOf(pecahanobe[0][0] + "\t" + pecahanobe[0][1] + "\t" + pecahanobe[0][2] + "\t" + pecahanobe[0][3] + "\t" + pecahanobe[0][4] + "\t" + pecahanobe[0][5] + "\t\n"));
        HasilOBE.append(String.valueOf(pecahanobe[1][0] + "\t" + pecahanobe[1][1] + "\t" + pecahanobe[1][2] + "\t" + pecahanobe[1][3] + "\t" + pecahanobe[1][4] + "\t" + pecahanobe[1][5] + "\t\n"));
        HasilOBE.append(String.valueOf(pecahanobe[2][0] + "\t" + pecahanobe[2][1] + "\t" + pecahanobe[2][2] + "\t" + pecahanobe[2][3] + "\t" + pecahanobe[2][4] + "\t" + pecahanobe[2][5] + "\t\n"));

        /* Matriks di sisi kanan adalah matriks invers dari matriks A */
        double[][] inverse = new double[n][n];
        for (int i = 0; i < n; i++) {
            inverse[i] = Arrays.copyOfRange(combined[i], n, 2 * n);
        }

        
        
       pecahan[0][0] = new Fraction(inverse[0][0]);
       pecahan[0][1] = new Fraction(inverse[0][1]);
       pecahan[0][2] = new Fraction(inverse[0][2]);
       pecahan[1][0] = new Fraction(inverse[1][0]);
       pecahan[1][1] = new Fraction(inverse[1][1]);
       pecahan[1][2] = new Fraction(inverse[1][2]);
       pecahan[2][0] = new Fraction(inverse[2][0]);
       pecahan[2][1] = new Fraction(inverse[2][1]);
       pecahan[2][2] = new Fraction(inverse[2][2]);
       
        // Tampilkan matriks invers
        HasilOBE.append("\nMatriks invers:\n ");
        HasilOBE.append(String.valueOf(pecahan[0][0] + "\t" + pecahan[0][1] + "\t" + pecahan[0][2] + "\t\n"));
        HasilOBE.append(String.valueOf(pecahan[1][0] + "\t" + pecahan[1][1] + "\t" + pecahan[1][2] + "\t\n"));
        HasilOBE.append(String.valueOf(pecahan[2][0] + "\t" + pecahan[2][1] + "\t" + pecahan[2][2] + "\t"));
       
    }

    // Fungsi untuk menukar baris ke-i dengan baris ke-j pada matriks
    public void swapRows(double[][] matrix, int i, int j) {
        double[] temp = matrix[i];
        matrix[i] = matrix[j];
        matrix[j] = temp;
    }

    public void printMatrix(double[][] matrix) {
        for (int i = 0; i < matrix.length; i++) {
            for (int j = 0; j < matrix[i].length; j++) {
                HasilOBE.append(matrix[i][j] + "\t");
                if ((j + 1) % 6 == 0) {
                    HasilOBE.append("\n");
                }
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OBE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OBE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OBE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OBE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OBE().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton HapusSemua;
    private javax.swing.JTextArea HasilOBE;
    private javax.swing.JButton OBE;
    private javax.swing.JTextField b1k1a;
    private javax.swing.JTextField b1k2a;
    private javax.swing.JTextField b1k3a;
    private javax.swing.JTextField b2k1a;
    private javax.swing.JTextField b2k2a;
    private javax.swing.JTextField b2k3a;
    private javax.swing.JTextField b3k1a;
    private javax.swing.JTextField b3k2a;
    private javax.swing.JTextField b3k3a;
    private javax.swing.JButton hasil;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField8;
    // End of variables declaration//GEN-END:variables
}
